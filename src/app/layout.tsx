import type { Metadata } from 'next';
import localFont from 'next/font/local';
import '@mantine/core/styles.css';
import './globals.css';
import { SessionProvider } from 'next-auth/react';
import { ColorSchemeScript, createTheme, MantineProvider } from '@mantine/core';
import { getLocale, getMessages } from 'next-intl/server';
import { NextIntlClientProvider } from 'next-intl';
import { auth } from '@/auth';
import AppLayout from '@/components/layout/AppLayout';

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  modal,
  children,
}: Readonly<{
  modal: React.ReactNode;
  children: React.ReactNode;
}>) {
  const session = await auth();
  const locale = await getLocale();
  const messages = await getMessages({ locale });

  const theme = createTheme({
    autoContrast: true,
    fontFamily: geistSans.variable,
    fontFamilyMonospace: geistMono.variable,
  });

  return (
    <html
      lang={locale}
      suppressHydrationWarning
    >
      <head>
        <ColorSchemeScript defaultColorScheme='dark' />
      </head>
      <body className={'antialiased'}>
        <SessionProvider session={session}>
          <NextIntlClientProvider messages={messages}>
            <MantineProvider
              theme={theme}
              defaultColorScheme='dark'
            >
              <AppLayout session={session}>
                <div>
                  {modal}
                  {children}
                </div>
              </AppLayout>
            </MantineProvider>
          </NextIntlClientProvider>
        </SessionProvider>
      </body>
    </html>
  );
}
